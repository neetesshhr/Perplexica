name: Add A Record to Cloudflare

on:
  workflow_dispatch:
  push:
    branches:
      - master  # or any branch you want this workflow to run on

jobs:
  update-dns:
    runs-on: self-hosted
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Fetch Public IP
        run: |
          PUBLIC_IP=$(curl -s https://api.ipify.org)
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

      - name: Add A Record to Cloudflare DNS
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          RECORD_NAME: ${{ vars.RECORD_NAME }}  # Change this to your desired record
          RECORD_TYPE: "A"
          RECORD_CONTENT: ${{ vars.PUBLIC_IP }}  # Replace with the IP address
        run: |
          curl -X POST "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/dns_records" \
          -H "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
          -H "Content-Type: application/json" \
          --data '{
            "type": "'"$RECORD_TYPE"'",
            "name": "'"$RECORD_NAME"'",
            "content": "'"$RECORD_CONTENT"'",
            "ttl": 120,
            "proxied": true
          }'


  deploy_appilcation:
    runs-on: self-hosted
    steps:
      - name: Install  necessary package
        run: |
          sudo apt update
          sudo apt install -y ansible
      
      - name: Run Ansible playbook
        env:
          RECORD_NAME: ${{ vars.RECORD_NAME }}
          OPENAPI_KEY: ${{ secrets.OPENAPI_KEY }}
          EMAIL_USER: rijalnitesh78@gmail.com
        working-directory: ansible
        run: |
          ansible-playbook -e "domain_name=$RECORD_NAME openapi_key=$OPENAPI_KEY email_user=$EMAIL_USER" main.yaml 
